name: Run tests

on:
  workflow_call:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup
        run: npm ci
      - name: Lint backend
        working-directory: server
        run: npm run lint
      - name: Lint frontend
        working-directory: web
        run: npm run lint

  formatting:
    name: Format
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - name: Install dependencies
        run: npm ci
      - name: Run prettier
        run: npm run format:check

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: keijo-test
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/keijo-test.tar
      - name: Run unit tests
        run: docker run -te CI=true keijo-test npm test

  e2e-tests:
    name: E2E tests
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Start backend services
        run: docker compose -f compose.ci.yaml up -d db nv-mock
      - name: Wait for mock NV API
        run: curl -v --head -X GET --retry 10 --retry-all-errors --retry-delay 5 http://localhost:4002
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: keijo
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/keijo.tar
      - name: Start backend
        run: docker compose -f compose.ci.yaml up -d server
      - name: Wait for backend
        run: curl -v --head -X GET --retry 10 --retry-all-errors --retry-delay 5 http://localhost:4000
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - name: Install Playwright
        run: npm ci
        env:
          CI: true
        working-directory: e2e
      - name: Run E2E tests
        run: npx playwright test --shard=${{ matrix.shardIndex }}/${{
          matrix.shardTotal }}
        env:
          CI: true
          API_URL: http://localhost:4000
        working-directory: e2e
      - name: Upload blob report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: e2e/blob-report/
          retention-days: 1
      - name: Print debug output
        if: failure()
        run: |
          docker ps
          docker compose -f compose.ci.yaml logs server
          docker compose -f compose.ci.yaml logs db

  e2e-report:
    name: E2E test report
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    needs:
      - e2e-tests
    if: ${{ !cancelled() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - name: Install dependencies
        run: npm ci
        working-directory: e2e
      - name: Download blob reports
        uses: actions/download-artifact@v4
        with:
          path: e2e/all-blob-reports
          pattern: blob-report-*
          merge-multiple: true
      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports
        working-directory: e2e
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-report--attempt-${{ github.run_attempt }}
          path: e2e/playwright-report
